---
title: "Control Totals"
format: html
editor: visual
---

# Setup - Define helper functions, set knitr path, load necessary packages

```{r, setup, include=FALSE}
root <- '../../../../Data/Working/Regional_Control_Totals/'

knitr::opts_knit$set(root.dir = root)
```

```{r}
sun <- function(x){
  sort(unique(x))}
lun <- function(x){
  length(unique(x))}
sna <- function(x){
  sort(names(x))}
```

```{r}
library(tidycensus)
library(tidyverse)
library(data.table)
library(reticulate)
library(mapcdatakeys)
library(janitor)
library(readxl)

##get rid of scientific notation
options(scipen = 999)
#Set random seed
set.seed(351)
```

# Part 1 - Processing UMDI population data

```{r}

# Load in Household Population Projections
umdi_pop<- fread(paste0(root, "UMDI/UMDI_V2024_RPA_Age_Sex_detail_2010-2050_a.csv")) %>%
  select(RPA,ageCAT6,Sex,`2010`,`2020`,`2030`,`2040`,`2050`) %>% 
  pivot_longer(4:8) %>% 
  rename(year=as.numeric(name),
         pop=value) %>% 
  mutate(pop=as.numeric(gsub(',','',pop)))

```

# Part 2 - Load and process PUMS Data

```{r}
# PUMS vintage final year
yr <- 2021

mkeys <- mapcdatakeys::all_muni_data_keys %>% select(muni_id,rpa_acr,mpo)

psf <- fread(paste0(root,'ma_muni_puma10_join.csv')) %>% 
  rename(muni_id=TOWN_ID,
         PUMA = PUMACE10) %>% 
  left_join(mkeys, by='muni_id') %>% 
  setDT()
  
lsf <- psf[,lapply(.SD,sum,na.rm=T),.(rpa_acr,PUMA),.SDcols='Shape_Area']
lsf[,mx:=max(Shape_Area),PUMA]
xw <- lsf[Shape_Area==mx, .(rpa_acr,PUMA)]
xw[,PUMA:=sprintf("%05d",PUMA)]
#List of PUMS variables
allvars <- pums_variables %>% filter(year==yr) %>% select(var_code) %>% unique()
variable_list <- c(
  "PUMA",
  "TYPEHUGQ",
  "SEX",
  "AGEP",
  "RAC1P",
  "HISP",
  "ESR",
  "WKHP",
  "SCHL",
  "WAGP",
  "SEMP",
  "ADJINC",
  "SPORDER",
  "HINCP"
)

pums_data <- get_pums(
    state = "MA",
    survey = "acs5",
    year = yr,
    variables = variable_list
  ) %>%
  left_join(xw, by='PUMA') %>% 
  mutate(
    ageCAT6 =
      cut(AGEP,
          breaks = c(-Inf, seq(4, 84, 5), Inf),
          labels = 1:18),
    
    # Consolidated Age Category
    # NOTE: Levels are (0) 0-14; (4) 15 to 19; (5) 20 to 24; (6) 25 to 34; (7) 35 to 44; (8) 45 to 54; (9) 55 to 64 (10) 65 to 74 (11) 75+
    PAGEC2 =
      cut(
        AGEP,
        breaks = c(-Inf, 14, 19, 24, 34, 44, 54, 64, 74, 79, 84, Inf),
        labels = c(0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13)
      ),

    # Categorizing employment status
    empstat = case_when(
      ESR == "b" ~ "Under 16 not eligible for work",
      ESR == 1 ~ "Employed",
      ESR == 2 ~ "Employed but not at work",
      ESR == 3 ~ "Unemployed",
      ESR == 4 ~ "Armed forces",
      ESR == 5 ~ "Armed forces but not at work",
      ESR == 6 ~ "Not in labor force"
    ),
    
    # Categorizing Civilian Labor Force or not
    # NOTE: Categories are (0) under 16 or non-civilian, (1) in labor force, (2) not in labor force
    lf = case_when(
      ESR == "b" | ESR == 4 | ESR == 5  ~ 0,
      ESR == 1 | ESR == 2 | ESR == 3  ~ 1,
      ESR == 6 ~ 2,
      is.na(ESR) ~ 0
    ),
    
    # Counts as Worker
    # NOTE: Categories are (0) under 16 or not in labor force, or (1) in labor force or non-civilian worker
    worker = case_when(
      (ESR == "b" | ESR == 6) ~ 0,
      (ESR == 1 | ESR == 2 | ESR == 3 | ESR == 4 | ESR == 5) ~ 1,
      is.na(ESR) ~ 0
    ),
    
    # Categorizing full or part-time work
    wrkfull = case_when(
      WKHP < 35 ~ "Part time (less than 35 hrs)",
      WKHP > 34 ~ "Full time (35 hrs or more)",
      is.na(WKHP) ~ "Under 16, unemployed, or not in labor force"
    ),
    
    
    # Determine if person is head of household
    HousHder = case_when(SPORDER == 1 ~ 1,
                         SPORDER > 1 ~ 2),
    
    # Determine if case counts as person
    person = case_when(SPORDER != 0 ~ 1,
                       SPORDER == 0 ~ 0),
    
    # Determine if case counts as child
    child = case_when(AGEP < 18 ~ 1,
                      AGEP >= 18 ~ 0)
  ) %>%
  
  #Generating Household Variables
  group_by(SERIALNO) %>%
  mutate(
    Worker_Total = sum(worker),
    Person_Total = sum(person),
    Child_Total = sum(child)
  ) %>%
  ungroup() %>%
  # Categorizing household sizes by number of persons (1) one person, (2) two persons, (3) three persons, (4) four or more persons
  mutate(
    HHSize = case_when(
      Person_Total == 1 ~ 1,
      Person_Total == 2 ~ 2,
      Person_Total == 3 ~ 3,
      Person_Total >= 4 ~ 4
    ),
    
    # Categorizing worker categories (0) no workers, (1) one worker, (2) two workers, (3) three or more workers
    WRKHH = case_when(Worker_Total == 0 ~ 0,
                      Worker_Total == 1 ~ 1,
                      Worker_Total == 2 ~ 2,
                      Worker_Total >= 3 ~ 3),
    
    # Determine if person is not hhder vs hhder of 0- wrk, 1wrk, 2 wrk, 3+wrk
    HHder = case_when(
      SPORDER == 1 & WRKHH == 0 ~ 0,
      SPORDER == 1 & WRKHH == 1 ~ 1,
      SPORDER == 1 & WRKHH == 2 ~ 2,
      SPORDER == 1 & WRKHH == 3 ~ 3,
      SPORDER > 1 ~ 99
    ),
    # Determine what type of household the person is heading or not heading (1) head child, (2) child, (3) head not child, (4) not head no child, (5) head single
    HHtype = case_when(
      Child_Total >= 1 & Person_Total > 1 & HHder != 99 ~ 1,
      Child_Total >= 1 & Person_Total > 1 & HHder == 99 ~ 2,
      Child_Total == 0 & Person_Total > 1 & HHder != 99 ~ 3,
      Child_Total == 0 & Person_Total > 1 & HHder == 99 ~ 4,
      Person_Total == 1 & HHder != 99 ~ 5
    )
  )

################################################################################

################################################################################
# 4. Generate BASELINE data for the reweighter targeting files
#
#Baseline of people in Households
hhpop_baseline <- PUMS_data %>% 
  filter(
    year == "2019" & TYPE == "1"
  ) %>%  
  mutate(
    PAGEC = as.factor(PAGEC),
    RPA = as.factor(RPA)
  ) %>% 
  group_by(
    RPA
  ) %>% 
  dplyr::count(
    var = PAGEC,
    wt = PWGTP
  ) %>% 
  rename(
    AgeCat = var,
    BASELINE = n
  ) %>% 
  mutate(
    AgeCat = case_when(
      AgeCat == 1 ~ "x == 1",
      AgeCat == 2 ~ "x == 2",
      AgeCat == 3 ~ "x == 3",
      AgeCat == 4 ~ "x == 4",
      AgeCat == 5 ~ "x == 5",
      AgeCat == 6 ~ "x == 6",
      AgeCat == 7 ~ "x == 7",
      AgeCat == 8 ~ "x == 8",
      AgeCat == 9 ~ "x == 9",
      AgeCat == 10 ~ "x == 10",
      AgeCat == 11 ~ "x == 11",
      AgeCat == 12 ~ "x == 12",
      AgeCat == 13 ~ "x == 13",
      AgeCat == 14 ~ "x == 14",
      AgeCat == 15 ~ "x == 15",
      AgeCat == 16 ~ "x == 16",
      AgeCat == 17 ~ "x == 17",
      AgeCat == 18 ~ "x == 18"
   )
  )

#Basline of Households by Household Type
hhtype_baseline <- PUMS_data %>% 
  filter(
    year == "2019" & TYPE == "1" & SPORDER == "1"
  ) %>%  
  mutate(
    PAGEC = as.factor(PAGEC),
    RPA = as.factor(RPA),
    HHtype = as.factor(HHtype)
  ) %>% 
  group_by(
    RPA,
    PAGEC
  ) %>% 
  dplyr::count(
    var = HHtype,
    wt = WGTP
  ) %>%
  ungroup() %>% 
  rename(
    HHtype = var,
    BASELINE = n,
    AgeCat = PAGEC
  ) %>% 
  mutate(
    HHtype = case_when(
      HHtype == 1 ~ "hhderchild",
      HHtype == 2 ~ "nothhderchild",
      HHtype == 3 ~ "hhdernochild",
      HHtype == 4 ~ "nothhdernochild",
      HHtype == 5 ~ "single"
    ),
    AgeCat = case_when(
      AgeCat == 1 ~ "x == 1",
      AgeCat == 2 ~ "x == 2",
      AgeCat == 3 ~ "x == 3",
      AgeCat == 4 ~ "x == 4",
      AgeCat == 5 ~ "x == 5",
      AgeCat == 6 ~ "x == 6",
      AgeCat == 7 ~ "x == 7",
      AgeCat == 8 ~ "x == 8",
      AgeCat == 9 ~ "x == 9",
      AgeCat == 10 ~ "x == 10",
      AgeCat == 11 ~ "x == 11",
      AgeCat == 12 ~ "x == 12",
      AgeCat == 13 ~ "x == 13",
      AgeCat == 14 ~ "x == 14",
      AgeCat == 15 ~ "x == 15",
      AgeCat == 16 ~ "x == 16",
      AgeCat == 17 ~ "x == 17",
      AgeCat == 18 ~ "x == 18"
    )
  ) %>% 
  dplyr::filter(
    HHtype == "hhderchild" | HHtype == "hhdernochild" | HHtype == "single"
  ) %>% 
  mutate(
    HHtype = case_when(
      HHtype == "hhderchild" ~ "x == 1",
      HHtype == "hhdernochild" ~ "x == 3",
      HHtype == "single" ~ "x == 5"
    )
  )


lf_baseline <- PUMS_data %>% 
  filter(
    year == "2019" & TYPE == "1" & lf == "1"
  ) %>%  
  mutate(
    PAGEC = as.factor(PAGEC),
    RPA = as.factor(RPA),
    eduattn = as.factor(eduattn)
  ) %>% 
  group_by(
    RPA,
    PAGEC
  ) %>% 
  dplyr::count(
    var = eduattn,
    wt = PWGTP
  ) %>% 
  ungroup() %>% 
  rename(
    eduattn = var,
    BASELINE = n,
    AgeCat = PAGEC
  ) %>% 
  mutate(
    eduattn = case_when(
      eduattn == 1 ~ "High School or less",
      eduattn == 2 ~ "Some college or Associate's degree",
      eduattn == 3 ~ "Bachelor's",
      eduattn == 4 ~ "Master's or higher"
    ),
    AgeCat = case_when(
      AgeCat == 1 ~ "x == 1",
      AgeCat == 2 ~ "x == 2",
      AgeCat == 3 ~ "x == 3",
      AgeCat == 4 ~ "x == 4",
      AgeCat == 5 ~ "x == 5",
      AgeCat == 6 ~ "x == 6",
      AgeCat == 7 ~ "x == 7",
      AgeCat == 8 ~ "x == 8",
      AgeCat == 9 ~ "x == 9",
      AgeCat == 10 ~ "x == 10",
      AgeCat == 11 ~ "x == 11",
      AgeCat == 12 ~ "x == 12",
      AgeCat == 13 ~ "x == 13",
      AgeCat == 14 ~ "x == 14",
      AgeCat == 15 ~ "x == 15",
      AgeCat == 16 ~ "x == 16",
      AgeCat == 17 ~ "x == 17",
      AgeCat == 18 ~ "x == 18"
    )
  ) %>% 
  mutate(
    eduattn = case_when(
      eduattn == "High School or less" ~ "x == 1",
      eduattn == "Some college or Associate's degree" ~ "x == 2",
      eduattn == "Bachelor's" ~ "x == 3",
      eduattn == "Master's or higher" ~ "x == 4"
    )
  )

write.csv(hhpop_baseline, "K:/DataServices/Projects/Current_Projects/Projections/Data/Tabular/tProjections 2022 v2050/Outputs/hhpop_baseline.csv", row.names = FALSE)
write.csv(hhtype_baseline, "K:/DataServices/Projects/Current_Projects/Projections/Data/Tabular/tProjections 2022 v2050/Outputs/hhtype_baseline.csv", row.names = FALSE)
write.csv(lf_baseline, "K:/DataServices/Projects/Current_Projects/Projections/Data/Tabular/tProjections 2022 v2050/Outputs/lf_baseline.csv", row.names = FALSE)

################################################################################
# 5. Generate BASELINE data for the reweighter targeting files
#
#5.1.1 Labor Force Participation by Sex, Age, Educational Attainment
#STATE LEVEL
PUMS_LF_PAGEC_SEX_EDUATTN_STATE <- PUMS_data %>%
  #Takes only observations that are in housing units and in the labor force.
  filter(TYPE == 1 & lf >= 1) %>%
  #Sets the level of aggregation (e.g. we want the number of observations by year, by age group, by sex, by educational attainment) 
  group_by(year, PAGEC, SEX, eduattn) %>%
  #Sums up the number of observations by the level of aggregation set above using the person weight.
  count(var = lf, wt = PWGTP) %>%
  #Recodes factor variables as the categories they represent.
  #Converts numbers into frequencies.
  mutate(
    var = case_when(
      var == 1 ~ "in LF",
      var == 2 ~ "not in LF"),
    SEX = case_when(
      SEX == 1 ~ "Male",
      SEX == 2 ~ "Female"),
    EDUATTN = case_when(
      eduattn == 1 ~ "High School or less",
      eduattn == 2 ~ "Some college or Associate's degree",
      eduattn == 3 ~ "Bachelor's",
      eduattn == 4 ~ "Master's or higher"),
    freq = (n/sum(n))) %>%
  filter(var == "in LF" & year == 2019) %>%
  #Removes the level of aggregation set earlier by group_by()
  ungroup() %>%
  #Drops the "n" variable 
  select(-n)# %>%
  #Rearranges the dataframe to have each column be a level of labor force participation.
  #and each row be an age sex, and educational attainment group.
  #pivot_wider(names_from = var, values_from = freq)
  #pivot_wider(names_from = var, values_from = n)

#RPA LEVEL
PUMS_pop_by_educ <- PUMS_data %>%
  #Takes only observations that are in housing units and in the labor force.
  filter(TYPE == 1 & lf >= 1) %>%
  #Sets the level of aggregation (e.g. we want the number of observations by year, by RPA, by age group, by sex, by educational attainment) 
  group_by(year, RPA, PAGEC, SEX) %>%
  #Sums up the number of observations by the level of aggregation set above using the person weight.
  count(var = eduattn, wt = PWGTP) %>%
  #Removes the level of aggregation set earlier by group_by()
  ungroup() %>%
  #Recodes factor variables as the categories they represent.
  mutate(
    var = case_when(
      var == 1 ~ "High School or less",
      var == 2 ~ "Some college or Associate's degree",
      var == 3 ~ "Bachelor's",
      var == 4 ~ "Master's or higher"),
    SEX = case_when(
      SEX == 1 ~ "Male",
      SEX == 2 ~ "Female"),
  ) %>%
  group_by(
    year, RPA, PAGEC, SEX
  ) %>% 
  #Converts numbers into frequencies for those in and not in the laborforce, based
  #on the demographic variables.
  mutate(
    freq = (n/sum(n))
  ) %>% 
  ungroup() %>% 
  filter(year == 2019) %>%
  #Drops the "n" variable 
  select(-n)

PUMS_LF_PAGEC_SEX_EDUATTN_RPA <- PUMS_data %>%
  #Takes only observations that are in housing units and in the labor force.
  filter(TYPE == 1 & lf >= 1) %>%
  #Sets the level of aggregation (e.g. we want the number of observations by year, by RPA, by age group, by sex, by educational attainment) 
  group_by(year, RPA, PAGEC, eduattn, SEX) %>%
  #Sums up the number of observations by the level of aggregation set above using the person weight.
  count(var = lf, wt = PWGTP) %>%
  #Removes the level of aggregation set earlier by group_by()
  ungroup() %>%
  #Recodes factor variables as the categories they represent.
  #Converts numbers into frequencies.
  mutate(
    var = case_when(
      var == 1 ~ "in LF",
      var == 2 ~ "not in LF"),
    SEX = case_when(
      SEX == 1 ~ "Male",
      SEX == 2 ~ "Female"),
    EDUATTN = case_when(
      eduattn == 1 ~ "High School or less",
      eduattn == 2 ~ "Some college or Associate's degree",
      eduattn == 3 ~ "Bachelor's",
      eduattn == 4 ~ "Master's or higher")
  ) %>%
  group_by(
    year, RPA, PAGEC, SEX, EDUATTN
  ) %>% 
  #Converts numbers into frequencies for those in and not in the laborforce, based
  #on the demographic variables.
  mutate(
    freq = (n/sum(n))
  ) %>% 
  ungroup() %>% 
  filter(var == "in LF" & year == 2019) %>%
  #Drops the "n" variable 
  select(-n) #%>%
  #Rearranges the dataframe to have each column be a level of labor force participation.
  #and each row be an age sex, and educational attainment group.
  #pivot_wider(names_from = var, values_from = freq)
  #pivot_wider(names_from = var, values_from = n)

#Bring in Labor Force Participation Rate Adjustment 
lfpr_adj <- read_excel(
  paste0(HH_Pop_Proj_dir,"LFPR_adjustment.xlsx"),
  sheet = 1
  ) %>%
  mutate(
    age_cat = as.factor(age_cat)
  )

#Join adjustment to PUMS laborforce participation rate calculations
PUMS_LF_PAGEC_SEX_EDUATTN_RPA <- left_join(PUMS_LF_PAGEC_SEX_EDUATTN_RPA, lfpr_adj, by = c("PAGEC" = "age_cat", "SEX" = "sex"))

PUMS_LF_PAGEC_SEX_EDUATTN_RPA <- PUMS_LF_PAGEC_SEX_EDUATTN_RPA %>%
  mutate(static_rate = freq,
         LFPR_adj_2020 = freq+adj_2020,
         LFPR_adj_2020 = if_else(LFPR_adj_2020 < 0, 0, LFPR_adj_2020),
         LFPR_adj_2020 = if_else(LFPR_adj_2020 > 1.0, 1.0, LFPR_adj_2020),
         LFPR_adj_2030_2050 = LFPR_adj_2020+adj_2030_2050,
         LFPR_adj_2030_2050 = if_else(LFPR_adj_2030_2050 < 0, 0, LFPR_adj_2030_2050),
         LFPR_adj_2030_2050 = if_else(LFPR_adj_2030_2050 > 1.0, 1.0, LFPR_adj_2030_2050)) %>%
  select(RPA, PAGEC, SEX, EDUATTN, static_rate, LFPR_adj_2020, LFPR_adj_2030_2050)

lfpr_2000 <- PUMS_LF_PAGEC_SEX_EDUATTN_RPA %>% 
  select(
    RPA, PAGEC, SEX, EDUATTN, static_rate
  ) %>% 
  dplyr::rename(
    lfpr = static_rate
  ) %>% 
  mutate(
    Year = 2000
  )

lfpr_2010 <- PUMS_LF_PAGEC_SEX_EDUATTN_RPA %>% 
  select(
    RPA, PAGEC, SEX, EDUATTN, static_rate
  )  %>% 
  dplyr::rename(
    lfpr = static_rate
  ) %>%  
  mutate(
    Year = 2010
  )

lfpr_2020 <- PUMS_LF_PAGEC_SEX_EDUATTN_RPA %>% 
  select(
    RPA, PAGEC, SEX, EDUATTN, LFPR_adj_2020
  ) %>% 
  dplyr::rename(
    lfpr = LFPR_adj_2020
  ) %>% 
  mutate(
    Year = 2020
  )

lfpr_2030 <- PUMS_LF_PAGEC_SEX_EDUATTN_RPA %>% 
  select(
    RPA, PAGEC, SEX, EDUATTN, LFPR_adj_2030_2050
  ) %>% 
  dplyr::rename(
    lfpr = LFPR_adj_2030_2050
  ) %>%  
  mutate(
    Year = 2030
  )

lfpr_2040 <- PUMS_LF_PAGEC_SEX_EDUATTN_RPA %>% 
  select(
    RPA, PAGEC, SEX, EDUATTN, LFPR_adj_2030_2050
  ) %>% 
  dplyr::rename(
    lfpr = LFPR_adj_2030_2050
  ) %>% 
  mutate(
    Year = 2040
  )

lfpr_2050 <- PUMS_LF_PAGEC_SEX_EDUATTN_RPA %>% 
  select(
    RPA, PAGEC, SEX, EDUATTN, LFPR_adj_2030_2050
  ) %>% 
  dplyr::rename(
    lfpr = LFPR_adj_2030_2050
  ) %>%  
  mutate(
    Year = 2050
  )

lfpr <- bind_rows(lfpr_2000,lfpr_2010,lfpr_2020,lfpr_2030,lfpr_2040,lfpr_2050) %>% mutate(Year = as.character(Year))

#Determine how many people are in each educational attainment bracket
umdi_pop_educ <- left_join(umdi_hh_population_proj, PUMS_pop_by_educ, by = c("MPO" = "RPA", "Sex"  = "SEX", "Age.Group" = "PAGEC"))

umdi_pop_educ <- umdi_pop_educ %>% 
  filter(
    Age.Group != 1 & Age.Group != 2 & Age.Group != 3
  ) %>% 
  mutate(
    HH_Population_Educ = HH_Population*freq
  ) %>% 
  select(
    -c(
      HH_Population,
      year,
      freq
    )
  ) %>% 
  dplyr::rename(
    EDUATTN = var
  ) %>% 
  relocate(
    EDUATTN,
    .before = HH_Population_Educ
  )

# Now Join the laborforce participation rate to the household population number by 
umdi_pop_educ_lf <- left_join(umdi_pop_educ, lfpr, by = c("Year", "MPO" = "RPA", "Sex"  = "SEX", "Age.Group" = "PAGEC", "EDUATTN"))

umdi_pop_educ_lf_cleaned <- umdi_pop_educ_lf %>% 
  mutate(
    lf = HH_Population_Educ*lfpr
  ) %>%
  select(
    -c(
      HH_Population_Educ,
      lfpr
    )
  ) %>% 
  pivot_wider(
    names_from = Year,
    values_from = lf
  ) %>% 
  dplyr::rename(
    lf_2000 = `2000`,
    lf_2010 = `2010`,
    lf_2020 = `2020`,
    lf_2030 = `2030`,
    lf_2040 = `2040`,
    lf_2050 = `2050`
  )

write.csv(umdi_pop_educ_lf_cleaned, "K:/DataServices/Projects/Current_Projects/Projections/Data/Tabular/tProjections 2022 v2050/Outputs/lf_age_sex_educ_cleaned_v3.22.23.csv",
          row.names = FALSE)

#5.2 Household Type by Age

#RPA LEVEL
PUMS_HHtype_PAGEC_RPA <- PUMS_data %>%
  #Inclues only observations for people in households (omits GQ)                       
  filter(TYPE == 1) %>%
  #Groups by variables in the dataframe necessary to getting the granularity of
  #data we're interested in.
  group_by(year, RPA, PAGEC) %>%
  #Computes the weighted sum of individuals in each HH type category by the groups
  #assigned above.
  count(var = HHtype, wt = PWGTP) %>%
  #Recodes factor variables as the categories they represent.
  #Converts numbers into frequencies.                       
  mutate(
    var = case_when(
      var == 1 ~ "hhderchild",
      var == 2 ~ "nothhderchild",
      var == 3 ~ "hhdernochild",
      var == 4 ~ "nothhdernochild",
      var == 5 ~ "single"),
    freq = (n/sum(n))) %>%
  #Selects the appropriate year of data
  filter(year == 2019) %>%
  #Removes the level of aggregation set earlier by group_by()
  ungroup()# %>%
  #Drops the variable that represents the number of observations from each category
  #select(-n) #%>%
  #Pivots the dataframe to a wide format 
  #pivot_wider(names_from = var, values_from = freq)
  #pivot_wider(names_from = var, values_from = freq)

#write.csv(PUMS_HHtype_PAGEC_RPA,
          #"S:/Network Shares/NEW K Drive/DataServices/Projects/Current_Projects/Projections/Data/Tabular/tProjections 2022 v2050/Outputs/hhtype_rates_v1.csv")
write.csv(PUMS_HHtype_PAGEC_RPA,
          "K:/DataServices/Projects/Current_Projects/Projections/Reweighter/Alternative_Scenarios/MAPC_General_HHd_Target/Projected_HeadshipRate_Adjustements/ACSPUMS_15_19_hhtype_rates_v03.22.23.csv",
          row.names = FALSE)
PUMS_HHtype_PAGEC_RPA <- read.csv(
  "K:/DataServices/Projects/Current_Projects/Projections/Reweighter/Alternative_Scenarios/MAPC_General_HHd_Target/Projected_HeadshipRate_Adjustements/ACSPUMS_15_19_hhtype_rates_v03.22.23_ADJUSTED.csv"
) %>% 
  select(
    -c(
      freq,
      adjustment,
      Ignore
    )
  ) %>% 
  dplyr::rename(
    freq = freq_adj
  )


umdi_hh_population_projs_age <- umdi_hh_population_proj %>%
  group_by(Year, MPO, Age.Group) %>%
  summarise(
    HH_Population = sum(HH_Population)
  ) %>% 
  ungroup()

umdi_pop_hhtype_age <- left_join(umdi_hh_population_projs_age, PUMS_HHtype_PAGEC_RPA, by = c("MPO" = "RPA", "Age.Group" = "PAGEC"))

umdi_pop_hhtype_age_cleaned <- umdi_pop_hhtype_age %>% 
  dplyr::rename(
    HH_type = var
  ) %>%
  rowwise() %>% 
  mutate(
    Households = HH_Population*freq
  ) %>% 
  select(
    -c(
      year,
      freq,
      HH_Population
    )
  ) %>% 
  pivot_wider(
    names_from = Year,
    values_from = Households
  ) %>% 
  dplyr::rename(
    proj_hh_2000 = `2000`,
    proj_hh_2010 = `2010`,
    proj_hh_2020 = `2020`,
    proj_hh_2030 = `2030`,
    proj_hh_2040 = `2040`,
    proj_hh_2050 = `2050`
  )


write.csv(umdi_pop_hhtype_age_cleaned,
          "K:/DataServices/Projects/Current_Projects/Projections/Data/Tabular/tProjections 2022 v2050/Outputs/hhtype_age_PROJECTIONS_v03.22.23.csv",
          row.names = FALSE)

PUMS_HHtype_PAGEC_SEX_RPA <- PUMS_data %>%
  #Inclues only observations for people in households (omits GQ)                       
  filter(TYPE == 1) %>%
  #Groups by variables in the dataframe necessary to getting the granularity of
  #data we're interested in.
  group_by(year, RPA, PAGEC, SEX) %>%
  #Computes the weighted sum of individuals in each HH type category by the groups
  #assigned above.
  count(var = HHtype, wt = PWGTP) %>%
  #Recodes factor variables as the categories they represent.
  #Converts numbers into frequencies.                       
  mutate(
    var = case_when(
      var == 1 ~ "hhderchild",
      var == 2 ~ "nothhderchild",
      var == 3 ~ "hhdernochild",
      var == 4 ~ "nothhdernochild",
      var == 5 ~ "single"
    ),
    SEX = case_when(
      SEX == 1 ~ "Male",
      SEX == 2 ~ "Female"
    ),
    freq = (n/sum(n))) %>%
  #Selects the appropriate year of data
  filter(year == 2019) %>%
  #Removes the level of aggregation set earlier by group_by()
  ungroup() %>%
  #Drops the variable that represents the number of observations from each category
  select(-n) #%>%
#Pivots the dataframe to a wide format 
#pivot_wider(names_from = var, values_from = freq)
#pivot_wider(names_from = var, values_from = freq)


umdi_pop_hhtype_age_sex <- left_join(umdi_hh_population_proj, PUMS_HHtype_PAGEC_SEX_RPA, by = c("MPO" = "RPA", "Age.Group" = "PAGEC", "Sex" = "SEX"))

umdi_pop_hhtype_age_sex_cleaned <- umdi_pop_hhtype_age_sex %>% 
  dplyr::rename(
    HH_type = var
  ) %>%
  rowwise() %>% 
  mutate(
    Households = HH_Population*freq
  ) %>% 
  select(
    -c(
      year,
      freq,
      HH_Population
    )
  ) %>% 
  pivot_wider(
    names_from = Year,
    values_from = Households
  ) %>% 
  dplyr::rename(
    proj_hh_2000 = `2000`,
    proj_hh_2010 = `2010`,
    proj_hh_2020 = `2020`,
    proj_hh_2030 = `2030`,
    proj_hh_2040 = `2040`,
    proj_hh_2050 = `2050`
  )

write.csv(umdi_pop_hhtype_age_sex_cleaned,
          "K:/DataServices/Projects/Current_Projects/Projections/Data/Tabular/tProjections 2022 v2050/Outputs/hhtype_age_sex_PROJECTIONS_v03.22.23.csv")
```

# Part 5

```{r}
### Format Targets for Reweighter from Projections
### Author: Brandon Stanaway
### Date: 08/05/2022
### Purpose:Takes output from projections methodology to create target files for the reweighter
### Same purpose as excel file K:/DataServices/Projects/Current_Projects/LandUseAllocationModel/Data/Analysis/UrbanSim_Inputs/HH_Targets/Reweighter_Targets_091020/Format_V2Projections_forControls.xlsx
### Targets are AgeHHder_HHtype, Pop_Age, Age_Edu_LF

rm(list=ls())
#install.packages("pacman")
pacman::p_load(tidyverse, plyr, dplyr,data.table, magrittr, readxl)

options(scipen = 999)

###Set directory paths for working remotely or in the office
#Remote
#inpath <- 'S:/Network Shares/DS Projects/Current_Projects/Projections/Data/Tabular/tProjections 2022 v2050/Outputs/'

#In-office
inpath <- 'K:/DataServices/Projects/Current_Projects/Projections/Data/Tabular/tProjections 2022 v2050/Outputs/'

#Remote
#outpath <- 'S:/Network Shares/DS Projects/Current_Projects/Projections/Data/Tabular/tProjections 2022 v2050/Outputs/'

#In-office
outpath <- 'K:/DataServices/Projects/Current_Projects/Projections/Data/Tabular/tProjections 2022 v2050/Outputs/'

#Remote
#reweighter_path <- 'S:/Network Shares/DS Projects/Current_Projects/Projections/Reweighter/Input Files/'

#In-office
reweighter_path <- 'K:/DataServices/Projects/Current_Projects/Projections/Reweighter/Input_Files/'

#Read in baseline files created in the "Projections 2050 Mastercode" R script
temp_hhd_proj <- fread(paste0(inpath,'hhtype_baseline.csv'))
temp_lf_proj <-  fread(paste0(inpath,'lf_baseline.csv'))
temp_pop_proj <-  fread(paste0(inpath,'hhpop_baseline.csv'))

#Depricated?
#temp_hhd_proj[HHtype=='x == 1', HHtype:='x == 5']
#temp_hhd_proj[HHtype=='x == 3', HHtype:='x == 1']
#temp_hhd_proj[HHtype=='x == 2', HHtype:='x == 3']


###HHd Projections####
hhd_proj <- read.csv(paste0(outpath,'hhtype_age_PROJECTIONS_v03.22.23.csv'))

hhd_proj %<>%
  filter(
    HH_type != "nothhderchild" & HH_type != "nothhdernochild"
  ) %>% 
  replace(
    is.na(.), 0
  ) %>% 
  dplyr::rename(
    RPA = MPO,
    AgeCat = Age.Group
  ) %>% 
  mutate(
    HH_type = case_when(
      HH_type == "hhderchild" ~ "x == 1",
      HH_type == "hhdernochild" ~ "x == 3",
      HH_type == "single" ~ "x == 5",
    ),
    AgeCat = case_when(
      AgeCat == 1 ~ "x == 1",
      AgeCat == 2 ~ "x == 2",
      AgeCat == 3 ~ "x == 3",
      AgeCat == 4 ~ "x == 4",
      AgeCat == 5 ~ "x == 5",
      AgeCat == 6 ~ "x == 6",
      AgeCat == 7 ~ "x == 7",
      AgeCat == 8 ~ "x == 8",
      AgeCat == 9 ~ "x == 9",
      AgeCat == 10 ~ "x == 10",
      AgeCat == 11 ~ "x == 11",
      AgeCat == 12 ~ "x == 12",
      AgeCat == 13 ~ "x == 13",
      AgeCat == 14 ~ "x == 14",
      AgeCat == 15 ~ "x == 15",
      AgeCat == 16 ~ "x == 16",
      AgeCat == 17 ~ "x == 17",
      AgeCat == 18 ~ "x == 18"
    )
  )

temp_hhd_proj %<>%
  mutate(
    INTER = BASELINE
  ) %>% 
  select(
    RPA,
    AgeCat,
    HHtype,
    BASELINE,
    INTER
  )

hhd_proj_all <- left_join(hhd_proj, temp_hhd_proj, by = c("RPA", "AgeCat", "HH_type" = "HHtype"))

hhd_proj_all %<>%
  dplyr::rename(
    ageCAT3 = AgeCat
  ) %>% 
  replace(
    is.na(.), 0
  )

V2_hhd_2010f <- hhd_proj_all %>% 
  select(
   RPA,
   ageCAT3,
   HH_type,
   proj_hh_2010,
   BASELINE,
   INTER
  ) %>% 
  dplyr::rename(
    HHtype = HH_type,
    TARGET = proj_hh_2010
  )

write.csv(V2_hhd_2010f,
          paste0(reweighter_path, "AgeHHder_HHtype_2010_V03.22.23.csv"),
          row.names = FALSE)
  
V2_hhd_2020f <- hhd_proj_all %>% 
  select(
    RPA,
    ageCAT3,
    HH_type,
    proj_hh_2020,
    BASELINE,
    INTER
  ) %>% 
  dplyr::rename(
    HHtype = HH_type,
    TARGET = proj_hh_2020
  )

write.csv(V2_hhd_2020f,
          paste0(reweighter_path, "AgeHHder_HHtype_2020_V03.22.23.csv"),
          row.names = FALSE)

V2_hhd_2030f <- hhd_proj_all %>% 
  select(
    RPA,
    ageCAT3,
    HH_type,
    proj_hh_2030,
    BASELINE,
    INTER
  ) %>% 
  dplyr::rename(
    HHtype = HH_type,
    TARGET = proj_hh_2030
  )

write.csv(V2_hhd_2030f,
          paste0(reweighter_path, "AgeHHder_HHtype_2030_V03.22.23.csv"),
          row.names = FALSE)

V2_hhd_2040f <- hhd_proj_all %>% 
  select(
    RPA,
    ageCAT3,
    HH_type,
    proj_hh_2040,
    BASELINE,
    INTER
  ) %>% 
  dplyr::rename(
    HHtype = HH_type,
    TARGET = proj_hh_2040
  )

write.csv(V2_hhd_2040f,
          paste0(reweighter_path, "AgeHHder_HHtype_2040_V03.22.23.csv"),
          row.names = FALSE)

V2_hhd_2050f <- hhd_proj_all %>% 
  select(
    RPA,
    ageCAT3,
    HH_type,
    proj_hh_2050,
    BASELINE,
    INTER
  ) %>% 
  dplyr::rename(
    HHtype = HH_type,
    TARGET = proj_hh_2050
  )

write.csv(V2_hhd_2050f,
          paste0(reweighter_path, "AgeHHder_HHtype_2050_V03.22.23.csv"),
          row.names = FALSE)

####LF Projections####

setwd(outpath)
lf_projections <- read_excel('lf_age_educ_v1.xlsx',
                             sheet = 1)

lf_projections %<>%
  replace(
    is.na(.),
    0
  ) %>% 
  dplyr::rename(
    RPA = MPO,
    Year = PRED_YEAR,
    AgeCat = age_cat
  )

lf_proj1 <- lf_projections %>% 
  select(
    RPA,
    Year,
    AgeCat,
    `High School or less Male in LF`,
    `High School or less Female in LF`
  ) %>% 
  mutate(
    TARGET = `High School or less Male in LF` + `High School or less Female in LF`,
    edu = "x == 1",
    AgeCat = case_when(
      AgeCat == 1 ~ "x == 1",
      AgeCat == 2 ~ "x == 2",
      AgeCat == 3 ~ "x == 3",
      AgeCat == 4 ~ "x == 4",
      AgeCat == 5 ~ "x == 5",
      AgeCat == 6 ~ "x == 6",
      AgeCat == 7 ~ "x == 7",
      AgeCat == 8 ~ "x == 8",
      AgeCat == 9 ~ "x == 9",
      AgeCat == 10 ~ "x == 10",
      AgeCat == 11 ~ "x == 11",
      AgeCat == 12 ~ "x == 12",
      AgeCat == 13 ~ "x == 13",
      AgeCat == 14 ~ "x == 14",
      AgeCat == 15 ~ "x == 15",
      AgeCat == 16 ~ "x == 16",
      AgeCat == 17 ~ "x == 17",
      AgeCat == 18 ~ "x == 18"
    )
  ) %>% 
  select(
    -`High School or less Male in LF`,
    -`High School or less Female in LF`
  )

lf_proj2 <- lf_projections %>% 
  select(
    RPA,
    Year,
    AgeCat,
    `Some college or Associate's degree Male in LF`,
    `Some college or Associate's degree Female in LF`
  ) %>% 
  mutate(
    TARGET = `Some college or Associate's degree Male in LF` + `Some college or Associate's degree Female in LF`,
    edu = "x == 2",
    AgeCat = case_when(
      AgeCat == 1 ~ "x == 1",
      AgeCat == 2 ~ "x == 2",
      AgeCat == 3 ~ "x == 3",
      AgeCat == 4 ~ "x == 4",
      AgeCat == 5 ~ "x == 5",
      AgeCat == 6 ~ "x == 6",
      AgeCat == 7 ~ "x == 7",
      AgeCat == 8 ~ "x == 8",
      AgeCat == 9 ~ "x == 9",
      AgeCat == 10 ~ "x == 10",
      AgeCat == 11 ~ "x == 11",
      AgeCat == 12 ~ "x == 12",
      AgeCat == 13 ~ "x == 13",
      AgeCat == 14 ~ "x == 14",
      AgeCat == 15 ~ "x == 15",
      AgeCat == 16 ~ "x == 16",
      AgeCat == 17 ~ "x == 17",
      AgeCat == 18 ~ "x == 18"
    )
  ) %>% 
  select(
    -`Some college or Associate's degree Male in LF`,
    -`Some college or Associate's degree Female in LF`
  )

lf_proj3 <- lf_projections %>% 
  select(
    RPA,
    Year,
    AgeCat,
    `Bachelor's Male in LF`,
    `Bachelor's Female in LF`
  ) %>% 
  mutate(
    TARGET = `Bachelor's Male in LF` + `Bachelor's Female in LF`,
    edu = "x == 3",
    AgeCat = case_when(
      AgeCat == 1 ~ "x == 1",
      AgeCat == 2 ~ "x == 2",
      AgeCat == 3 ~ "x == 3",
      AgeCat == 4 ~ "x == 4",
      AgeCat == 5 ~ "x == 5",
      AgeCat == 6 ~ "x == 6",
      AgeCat == 7 ~ "x == 7",
      AgeCat == 8 ~ "x == 8",
      AgeCat == 9 ~ "x == 9",
      AgeCat == 10 ~ "x == 10",
      AgeCat == 11 ~ "x == 11",
      AgeCat == 12 ~ "x == 12",
      AgeCat == 13 ~ "x == 13",
      AgeCat == 14 ~ "x == 14",
      AgeCat == 15 ~ "x == 15",
      AgeCat == 16 ~ "x == 16",
      AgeCat == 17 ~ "x == 17",
      AgeCat == 18 ~ "x == 18"
    )
  ) %>% 
  select(
    -`Bachelor's Male in LF`,
    -`Bachelor's Female in LF`
  )


lf_proj4 <- lf_projections %>% 
  select(
    RPA,
    Year,
    AgeCat,
    `Master's or higher Male in LF`,
    `Master's or higher Female in LF`
  ) %>% 
  mutate(
    TARGET = `Master's or higher Male in LF` + `Master's or higher Female in LF`,
    edu = "x == 4",
    AgeCat = case_when(
      AgeCat == 1 ~ "x == 1",
      AgeCat == 2 ~ "x == 2",
      AgeCat == 3 ~ "x == 3",
      AgeCat == 4 ~ "x == 4",
      AgeCat == 5 ~ "x == 5",
      AgeCat == 6 ~ "x == 6",
      AgeCat == 7 ~ "x == 7",
      AgeCat == 8 ~ "x == 8",
      AgeCat == 9 ~ "x == 9",
      AgeCat == 10 ~ "x == 10",
      AgeCat == 11 ~ "x == 11",
      AgeCat == 12 ~ "x == 12",
      AgeCat == 13 ~ "x == 13",
      AgeCat == 14 ~ "x == 14",
      AgeCat == 15 ~ "x == 15",
      AgeCat == 16 ~ "x == 16",
      AgeCat == 17 ~ "x == 17",
      AgeCat == 18 ~ "x == 18"
    )
  ) %>% 
  select(
    -`Master's or higher Male in LF`,
    -`Master's or higher Female in LF`
  )

lf_proj <- rbind(lf_proj1, lf_proj2, lf_proj3, lf_proj4)

lf_proj %<>%
  dplyr::rename(
    ageCAT3 = AgeCat
  )

temp_lf_proj %<>%
  mutate(
    INTER = BASELINE,
    lf = "x == 1"
  ) %>%
  dplyr::rename(
    edu = eduattn
  ) %>% 
  select(
    RPA,
    AgeCat,
    edu,
    BASELINE,
    INTER,
    lf
  )

lf_proj_all <- left_join(lf_proj, temp_lf_proj, by = c("RPA", "ageCAT3" = "AgeCat", "edu"))

V2_lf_2010f <- lf_proj_all %>% 
  filter(
    Year == 2010
  ) %>% 
  select(
    RPA,
    ageCAT3,
    edu,
    lf,
    BASELINE,
    TARGET
  )

write.csv(V2_lf_2010f,
          "//data-001/public/DataServices/Projects/Current_Projects/Projections/Reweighter/Input Files/LF_Age_Edu_2010_V2.csv",
          row.names = FALSE
)

V2_lf_2020f <- lf_proj_all %>% 
  filter(
    Year == 2020
  ) %>% 
  select(
    RPA,
    ageCAT3,
    edu,
    lf,
    BASELINE,
    TARGET
  )

write.csv(V2_lf_2020f,
          "//data-001/public/DataServices/Projects/Current_Projects/Projections/Reweighter/Input Files/LF_Age_Edu_2020_V2.csv",
          row.names = FALSE
)

V2_lf_2030f <- lf_proj_all %>% 
  filter(
    Year == 2030
  ) %>% 
  select(
    RPA,
    ageCAT3,
    edu,
    lf,
    BASELINE,
    TARGET
  )

write.csv(V2_lf_2030f,
          "//data-001/public/DataServices/Projects/Current_Projects/Projections/Reweighter/Input Files/LF_Age_Edu_2030_V2.csv",
          row.names = FALSE
)

V2_lf_2040f <- lf_proj_all %>% 
  filter(
    Year == 2040
  ) %>% 
  select(
    RPA,
    ageCAT3,
    edu,
    lf,
    BASELINE,
    TARGET
  )

write.csv(V2_lf_2040f,
          "//data-001/public/DataServices/Projects/Current_Projects/Projections/Reweighter/Input Files/LF_Age_Edu_2040_V2.csv",
          row.names = FALSE
)

V2_lf_2050f <- lf_proj_all %>% 
  filter(
    Year == 2050
  ) %>% 
  select(
    RPA,
    ageCAT3,
    edu,
    lf,
    BASELINE,
    TARGET
  )

write.csv(V2_lf_2050f,
          "//data-001/public/DataServices/Projects/Current_Projects/Projections/Reweighter/Input Files/LF_Age_Edu_2050_V2.csv",
          row.names = FALSE
  )

####PopbyAge####
####V2####
setwd(outpath)
data <-read_excel('hhpop_age_v1.xlsx',
                  sheet = 1)

data %<>% 
  dplyr::rename(
    AgeCat = age_cat
  ) %>% 
  mutate(
  AgeCat = case_when(
    AgeCat == 1 ~ "x == 1",
    AgeCat == 2 ~ "x == 2",
    AgeCat == 3 ~ "x == 3",
    AgeCat == 4 ~ "x == 4",
    AgeCat == 5 ~ "x == 5",
    AgeCat == 6 ~ "x == 6",
    AgeCat == 7 ~ "x == 7",
    AgeCat == 8 ~ "x == 8",
    AgeCat == 9 ~ "x == 9",
    AgeCat == 10 ~ "x == 10",
    AgeCat == 11 ~ "x == 11",
    AgeCat == 12 ~ "x == 12",
    AgeCat == 13 ~ "x == 13",
    AgeCat == 14 ~ "x == 14",
    AgeCat == 15 ~ "x == 15",
    AgeCat == 16 ~ "x == 16",
    AgeCat == 17 ~ "x == 17",
    AgeCat == 18 ~ "x == 18"
  )
)

pop_proj_all <- left_join(data, temp_pop_proj, by = c("MPO" = "RPA", "AgeCat"))

pop_proj_all %<>%
  dplyr::rename(
    RPA = MPO,
    ageCAT3 = AgeCat,
    TARGET = proj_hh_pop,
    Year = year
  )
  
V2_hhpop_2020f <- pop_proj_all %>% 
  filter(
    Year == 2020
  ) %>% 
  select(
    RPA,
    ageCAT3,
    TARGET,
    BASELINE
  )

write.csv(
  V2_hhpop_2020f,
  "//data-001/public/DataServices/Projects/Current_Projects/Projections/Reweighter/Input Files/Pop_Age_2020_V2.csv",
  row.names = FALSE
)

V2_hhpop_2030f <- pop_proj_all %>% 
  filter(
    Year == 2030
  ) %>% 
  select(
    RPA,
    ageCAT3,
    TARGET,
    BASELINE
  )

write.csv(
  V2_hhpop_2030f,
  "//data-001/public/DataServices/Projects/Current_Projects/Projections/Reweighter/Input Files/Pop_Age_2030_V2.csv",
  row.names = FALSE
)

V2_hhpop_2040f <- pop_proj_all %>% 
  filter(
    Year == 2040
  ) %>% 
  select(
    RPA,
    ageCAT3,
    TARGET,
    BASELINE
  )

write.csv(
  V2_hhpop_2040f,
  "//data-001/public/DataServices/Projects/Current_Projects/Projections/Reweighter/Input Files/Pop_Age_2040_V2.csv",
  row.names = FALSE
)

V2_hhpop_2050f <- pop_proj_all %>% 
  filter(
    Year == 2050
  ) %>% 
  select(
    RPA,
    ageCAT3,
    TARGET,
    BASELINE
  )

write.csv(
  V2_hhpop_2050f,
  "//data-001/public/DataServices/Projects/Current_Projects/Projections/Reweighter/Input Files/Pop_Age_2050_V2.csv",
  row.names = FALSE
)

```
