---
title: "01_Disability"
format: html
editor: visual
---

# 0.0 Setup - Define helper functions, set knitr path, load necessary packages, set muni data keys

#Set up libraries for the analysis

```{r}
library(tidycensus)
library(tidyverse)
library(survey)
library(srvyr)
library(data.table)
library(janitor) 
library(dplyr)
library(knitr)
```

# 0.1 - Set knitr path + root for inputs

```{r}
#copied from MAPC work - not sure if we want to set up this way - ??

#Use when Rproject is open
#root <- '../../../../Data/Working/Regional_Control_Totals/'

#General J drive filepath
root <-"J:/EPPR/Active Studies/EOHLC Statewide Hsg Plan_FY24/Data/pums_UMDI"

#PUMS J drive filepath
pums_path <- "J:/EPPR/Active Studies/EOHLC Statewide Hsg Plan_FY24/Data/pums_UMDI"

#Set output filepath
output_path <- ":/EPPR/Active Studies/EOHLC Statewide Hsg Plan_FY24/Data/pums_UMDI/Output"

#Set knitr path
knitr::opts_knit$set(root.dir = pums_path)
```

# 0.2 - Set package dependencies, set environment, set up data keys

```{r}
#source("J:/EPPR/Active Studies/EOHLC Statewide Hsg Plan_FY24/Data/pums_UMDI")

#Load PUMS variables
pums <- read.csv("J:/EPPR/Active Studies/EOHLC Statewide Hsg Plan_FY24/Data/pums_UMDI/pums_disab_hh_2021_V_2024-10-02.csv")
```

# 0.3 PUMA to RPA Crosswalk

```{r}
#Load in the municipality to PUMA crosswalk.
RPA_crosswalk <- read.csv ("J:/EPPR/Active Studies/EOHLC Statewide Hsg Plan_FY24/Data/pums_UMDI/PUMA10_RPA_crosswalk.csv")
```

# 0.4 PUMS Data Cleaning

```{r}
#Joining the PUMA to RPA crosswalk to the PUMS data.
pums <- left_join(
  pums,
  RPA_crosswalk,
  by = c("PUMA"))

pums_duplicates <- pums %>%
    group_by(uniq_obs) %>%
    filter(n() > 1)

print(pums_duplicates)

```

# 1.0 PUMS Analysis

# 1.1 State-level, person level analysis

1)  Number of individuals living outside of GQ with any disability/number living in GQ

2)  Age distribution of people living with disability

```{r}


```

# 1.2 State-level, household level analysis

Number of hhlds with a member who has a disability statewide and by RPA

Share of hhlds with a member who has a disability statewide and by RPA

Number of hhlds with a member who has a disability by type of disability e.g. With an ambulatory disability, etc.

Share of hhlds with a member who has a disability by type of disability e.g. With an ambulatory disability, etc.

Hhld Income

Housing tenure

Age of housing stock

Over-crowding

Cost-burden

```{r}
#Number of households with a member who has a disability 

#Calculate the number of people with a disability 
people_with_disability <- pums %>%
  group_by(uniq_obs) %>%
  filter(DIS == 1) 

#Aggregate person-level data to household level
#Keep only distinct households by grouping by hhld id and selecting one row per household
households_with_disability <- people_with_disability %>%
  group_by(SERIALNO) %>%
  summarize(WGTP = first(WGTP), count_disabled = sum(DIS == 1)) %>%  #Retain household weights (same for all persons in the household)
  ungroup()

#Define the survey design with household weights
household_design_dis <- svydesign(ids = ~1,           #No clustering
                              weights = ~WGTP,    #Apply household weights
                              data = households_with_disability)

#Calculate the total number of households with a disability (weighted)
total_households_with_disability <- svytotal(~I(SERIALNO != 0), design = household_design_dis)
print(total_households_with_disability)

#Calculate the total number of households in sample (weighted)
household_data <- pums %>%
filter(RT == "H")

total_weighted_households <- sum(household_data$WGTP, na.rm = TRUE)
print(total_weighted_sample)

#Calculate percent of households who have some one with a disability
percentage_with_disability <- (total_households_with_disability[[2]] / total_weighted_households[[1]]) * 100

#Create summary table
dis_summary_table <- data.frame(
  "Households with Disability" = total_households_with_disability[[2]],
  "Share of Households with Disability" = percentage_with_disability,
  "Total Households" = total_weighted_households[[1]])

```
