---
title: "01_Disability"
format: html
editor: visual
---

# 0.0 Setup - Define helper functions, set knitr path, load necessary packages, set muni data keys

#Set up libraries for the analysis

```{r}
library(tidycensus)
library(tidyverse)
library(survey)
library(srvyr)
library(data.table)
library(janitor) 
library(dplyr)
library(knitr)
library(readxl)
library(writexl)
```

# 0.1 - Set knitr path + root for inputs

```{r}
#copied from MAPC work - not sure if we want to set up this way - 

#Use when Rproject is open
#root <- '../../../../Data/Working/Regional_Control_Totals/'

#General J drive filepath
root <-"J:/EPPR/Active Studies/EOHLC Statewide Hsg Plan_FY24/Data/pums_UMDI"

#PUMS J drive filepath
pums_path <- "J:/EPPR/Active Studies/EOHLC Statewide Hsg Plan_FY24/Data/pums_UMDI"

#Set output filepath
output_path <- ":/EPPR/Active Studies/EOHLC Statewide Hsg Plan_FY24/Data/pums_UMDI/Output"

#Set knitr path
#knitr::opts_knit$set(root.dir = pums_path)
```

# 0.2 - Set package dependencies, set environment, set up data keys

```{r}
#source("J:/EPPR/Active Studies/EOHLC Statewide Hsg Plan_FY24/Data/pums_UMDI")

#Load PUMS variables
pums <- read.csv("J:/EPPR/Active Studies/EOHLC Statewide Hsg Plan_FY24/Data/pums_UMDI/pums_disab_hh_2021_V_2024-10-02.csv")
```

# 0.3 PUMA to RPA Crosswalk

```{r}
#Load in the municipality to PUMA crosswalk.
RPA_crosswalk <- read.csv ("J:/EPPR/Active Studies/EOHLC Statewide Hsg Plan_FY24/Data/pums_UMDI/PUMA10_RPA_crosswalk.csv")
```

# 0.4 PUMS Data Cleaning

```{r}
#Joining the PUMA to RPA crosswalk to the PUMS data. - not working right now, it's a many to many join 
pums <- left_join(
  pums,
  RPA_crosswalk,
  by = c("PUMA"))

pums_duplicates <- pums %>%
    group_by(uniq_obs) %>%
    filter(n() > 1)

print(pums_duplicates)

```

# 1.0 PUMS Analysis

# 1.1 State-level, person level analysis

1)  Number of individuals living outside of GQ with any disability/number living in GQ

2)  Age distribution of people living with disability

```{r}
# 1) Calculate the number of people with a disability

#Create data set with people who have a disability outside of group quarters
people_with_disability <- pums %>%
  group_by(uniq_obs) %>%
  filter(DIS == 1) %>% #filtering for disability flag, will only include person-level data not hhld data
  filter(TYPEHUGQ != 2) #filtering out institutional group quarters

#simple way to calculate weighted number of people with disability 
number_of_people_with_disability <- sum(people_with_disability$PWGTP, na.rm = TRUE)

#Calculate the total number of people in sample, not in GQ 
person_data <- pums %>%
filter(RT == "P") %>% #filtering for only people not hhlds 
filter(TYPEHUGQ != 2) 

#add weights for total number in sample
total_weighted_sample <- sum(person_data$PWGTP, na.rm = TRUE)

#Calculate percent with a disability
percentage_with_disability_person <- (number_of_people_with_disability / total_weighted_sample) * 100

dis_summary_table_person <- data.frame(
  "People with Disability" = number_of_people_with_disability,
  "Share with Disability" = percentage_with_disability_person,
  "Total" = total_weighted_sample)


###Repeat above steps for people with disability in GQ


#Create data set with people who have a disability IN group quarters
people_with_disability_GQ <- pums %>%
  group_by(uniq_obs) %>%
  filter(DIS == 1) %>% #filtering disability flag
  filter(TYPEHUGQ == 2) #only institutional group quarters

#simple way to calculate weighted number of people with disability 
number_of_people_with_disability_GQ <- sum(people_with_disability_GQ$PWGTP, na.rm = TRUE)

#Calculate the total number of people in sample in GQ
person_data_GQ <- pums %>%
filter(RT == "P") %>%
filter(TYPEHUGQ == 2)

#add weights
total_weighted_sample_GQ <- sum(person_data_GQ$PWGTP, na.rm = TRUE)

#Calculate percent with a disability
percentage_with_disability_person_GQ <- (number_of_people_with_disability_GQ / total_weighted_sample_GQ) * 100

dis_summary_table_person_GQ <- data.frame(
  "People with Disability" = number_of_people_with_disability_GQ,
  "Share with Disability" = percentage_with_disability_person_GQ,
  "Total" = total_weighted_sample_GQ)

```

12% of people in the state have some type of disability, which is a little over 800,000 people.

This is for the non-institutionalized population and note that children under 5 are not included in the disability measures for cognitive difficulty, ambulatory difficulty, and self-care difficulty.

In the institutionalized population, 73% have a disability.

```{r}
# 2) Age distribution of people living with disability
age_people_with_disability <- people_with_disability %>% 
select(uniq_obs, PUMA, PWGTP, AGEP) %>% 
mutate(age_range = case_when(
    AGEP >= 0 & AGEP < 5 ~ "Under 5",
    AGEP >= 5 & AGEP < 18 ~ "5-17",
    AGEP >= 18 & AGEP < 35 ~ "18-34",
    AGEP >= 35 & AGEP < 65 ~ "35-64",
    AGEP >= 65 & AGEP < 75 ~ "65-74",
    AGEP >= 75 ~ "75 and over"))

disability_age_counts <- age_people_with_disability %>%
  group_by(age_range) %>%
  summarise(age_weighted_sum = sum(PWGTP)) %>%
  mutate(percentage = (age_weighted_sum / number_of_people_with_disability * 100)) %>%
  mutate(age_range = factor(age_range, levels = c("Under 5", "5-17", "18-34", "35-64", "65-74", "75 and over"))) %>%
  arrange(age_range)

```

The majority of people with disabilities are adults, especially older adults. One in four of people with a disability in the state are age 75 and older. A total of 43% of people with a disability are age 65 and older (17% is 64-74 and 26% is age 75+).

A little over a third of people with a disability are in the age range of 35 to 64. 

Note that children under 5 are excluded in the disability measures for cognitive difficulty, ambulatory difficulty, and self-care difficulty. The independent living variable is only for people 16 and older. 

```{r}
#Export person-level disability data 
  write.xlsx(list('Percent with disability' = dis_summary_table_person,
                  'Percent of GQ with disability' = dis_summary_table_person_GQ,
                'Age range' = disability_age_counts),
           file = "J:/EPPR/Active Studies/EOHLC Statewide Hsg Plan_FY24/Data/pums_UMDI/Output/dis_person.xlsx") 

```

# 1.2 State-level, household level analysis

Number of hhlds with a member who has a disability statewide and by RPA

Share of hhlds with a member who has a disability statewide and by RPA

Number of hhlds with a member who has a disability by type of disability e.g. With an ambulatory disability, etc.

Share of hhlds with a member who has a disability by type of disability e.g. With an ambulatory disability, etc.

Hhld Income

Housing tenure

Age of housing stock

Over-crowding

Cost-burden

```{r}
#Number of households with a member who has a disability 
#Statewide
#Aggregate person-level data to household level
households_with_disability <- people_with_disability %>% #GQ is already filtered out in person-level data
  group_by(SERIALNO) %>%
  summarize(WGTP = first(WGTP), count_disabled = sum(DIS == 1)) %>%  #Retain household weights (same for all persons in the household)
  ungroup()

total_households_with_disability <- sum(households_with_disability$WGTP, na.rm = TRUE)

#Calculate the total number of households in sample 
household_data <- pums %>%
filter(RT == "H") %>%
filter(TYPEHUGQ != 2)
#add weights
total_weighted_households <- sum(household_data$WGTP, na.rm = TRUE)

#Calculate percent of households who have some one with a disability
percentage_with_disability <- (total_households_with_disability / total_weighted_households) * 100

#Create summary table
dis_summary_table_hhld <- data.frame(
  "Households with Disability" = total_households_with_disability,
  "Share of Households with Disability" = percentage_with_disability,
  "Total Households" = total_weighted_households)

```

22% of households in the state have someone with a disability. This is around 650,000 households.

```{r}
#Export disability data 
  write.xlsx(list('Percent with disability' = dis_summary_table_hhld),
           file = "J:/EPPR/Active Studies/EOHLC Statewide Hsg Plan_FY24/Data/pums_UMDI/Output/dis_hhld.xlsx") 
```

```{r}
#Detailed disability type 

## Ambulatory disabilities - DPHY
ambulatory_households <- people_with_disability %>% #GQ is already filtered out in person-level data
  group_by(SERIALNO) %>%
  filter(DPHY == 1) %>%
  summarize(WGTP = first(WGTP), count_ambulatory = sum(DPHY == 1)) %>%  #Retain household weights (same for all persons in the household)
  ungroup()

#Calculate weighted total of ambulatory hhlds 
ambulatory_total_households <- sum(ambulatory_households$WGTP, na.rm = TRUE)

#Calculate percentage out of all households
ambulatory_percentage <- (ambulatory_total_households / total_weighted_households) * 100

ambulatory_summary_table_hhld <- data.frame(
  "Ambulatory Households with Disability" = ambulatory_total_households,
  "Share of Households" = ambulatory_percentage,
  "Total Households" = total_weighted_households)


#Repeating above steps for all detailed disabilities 

## Self-care difficulty - DDRS 
self_care_households <- people_with_disability %>% 
  group_by(SERIALNO) %>%
  filter(DDRS == 1) %>%
  summarize(WGTP = first(WGTP), count_self_care = sum(DDRS == 1)) %>%  
  ungroup()

self_care_total_households <- sum(self_care_households$WGTP, na.rm = TRUE)
self_care_percentage <- (self_care_total_households / total_weighted_households) * 100

## Hearing difficulty - DEAR
hearing_households <- people_with_disability %>% 
  group_by(SERIALNO) %>%
  filter(DEAR == 1) %>%
  summarize(WGTP = first(WGTP), count_hearing = sum(DEAR == 1)) %>%  
  ungroup()

hearing_total_households <- sum(hearing_households$WGTP, na.rm = TRUE)
hearing_percentage <- (hearing_total_households / total_weighted_households) * 100

## Vision difficulty - DEYE 
vision_households <- people_with_disability %>% 
  group_by(SERIALNO) %>%
  filter(DEYE == 1) %>%
  summarize(WGTP = first(WGTP), count_vision = sum(DEYE == 1)) %>%  
  ungroup()

vision_total_households <- sum(vision_households$WGTP, na.rm = TRUE)
vision_percentage <- (vision_total_households / total_weighted_households) * 100

## Independent living difficulty - DOUT
independent_living_households <- people_with_disability %>% 
  group_by(SERIALNO) %>%
  filter(DOUT == 1) %>%
  summarize(WGTP = first(WGTP), count_independent_living = sum(DOUT == 1)) %>%   
  ungroup()

independent_living_total_households <- sum(independent_living_households$WGTP, na.rm = TRUE)
independent_living_percentage <- (independent_living_total_households / total_weighted_households) * 100

## Cognitive difficulty - DREM 
cognitive_households <- people_with_disability %>% 
  group_by(SERIALNO) %>%
  filter(DREM == 1) %>%
  summarize(WGTP = first(WGTP), count_cognitive = sum(DREM == 1)) %>%  
  ungroup()

cognitive_total_households <- sum(cognitive_households$WGTP, na.rm = TRUE)
cognitive_percentage <- (cognitive_total_households / total_weighted_households) * 100

## Make a table with counts and percents for detailed disabilities 





```

```{r}
#Export detailed disability household data 
  write.xlsx(list('Ambulatory_hhld' = ,
                  '' = ,
                '' = ),
           file = "J:/EPPR/Active Studies/EOHLC Statewide Hsg Plan_FY24/Data/pums_UMDI/Output/dis_hhld_detail.xlsx") 


```

