---
title: "RPA_Reweighter"
format: html
editor: visual
project: execute-dir: project
---

## RPA Reweighter

This set of scripts runs the household reweighter to produce reweighted PUMS data that satisfies household targets set by the user.

# 1 - Set Scenario Name, knitr path, and root directory

```{r, setup, include=FALSE}

# Set Scenario name
scen <- 'Scenario_1'

# Set ACS / PUMS vintage
vintage <-  2021

# Root Directory
root <- 'S:/Network Shares/K Drive/DataServices/Projects/'
# root <- 'K:/DataServices/Projects/'

ctrltotal.path <- paste0(root, 'Current_Projects/Housing/StatewideHousingPlan/04_Analysis/Data/Working/Regional_Control_Totals/', scen, '/')

workpath <- paste0(root, 'Current_Projects/Housing/StatewideHousingPlan/04_Analysis/Data/Working/Reweighter/')

input_path <- paste0(workpath, scen, '/Input_Files/') 
output_path <- paste0(workpath, scen, '/Output_Files/') 

#Set knitr path
# knitr::opts_knit$set(root.dir = workpath)
```

# 2 - Set package dependencies, set environment, helper functions

```{r}
pacman::p_load(
  tidyverse,
  tidycensus,
  mapcdatakeys,
  janitor,
  readxl,
  rjson,
  data.table
)

##get rid of scientific notation
options(scipen = 999)

#Set random seed
set.seed(351)

# Helper function
sun <- function(x){sort(unique(x))}

# List of RPA names
mpos <- unlist(c(mapcdatakeys::all_muni_data_keys %>% select(mpo) %>% unique()))


```

# 3 - Subset PUMS data for each RPA

Formatted PUMS data is created by the *create_regional_control_totals.qmd* in section 6.2

```{r}

pums_data <- fread(paste0(workpath, '/PUMS_data/PUMS', vintage, '_formatted.csv'))

# Make Input folders for reweighter by RPA
 dir.create(paste0(workpath, scen, '/Input_Files/'), showWarnings = F)
 dir.create(paste0(workpath, scen, '/Output_Files/'), showWarnings = F)
 
for (m in mpos) {
  dir.create(paste0(workpath, scen, '/Input_Files/', m), showWarnings = F)
  dir.create(paste0(workpath, scen, '/Output_Files/', m), showWarnings = F)
}

# MAPC 101 subset
fwrite(pums_data[PUMA %in% mapc.pumas],
       paste0(workpath, scen, '/Input_Files/MAPC/PUMS', vintage, '_MAPC.csv'))
message(paste0('MAPC 101 PUMS export complete'))

# SWM join PUMA and export subsets
for (m in unique(swm.pumas$rpa_acr)) {
  mp <- swm.pumas[rpa_acr == m]
  pums_data %>%
    left_join(mp, by = 'PUMA') %>%
    filter(rpa_acr == m) %>%
    fwrite(paste0(workpath, scen, '/Input_Files/', m, '/PUMS', vintage, '_', m, '.csv'))
  message(paste0(m, ' PUMS export complete'))
}

```

# 4 - Create RPA config JSON files for reweighter configuration

```{r}

# Template config file
infile1 <- paste0(workpath, 'Templates/reweighting_config_2021.json')

infile2 <- paste0(workpath, 'Templates/reweighting_config_2020baseyear.json')

for (m in mpos){
  outfile1 <- paste0(workpath, scen, '/Input_Files/', m, '/reweighting_config_2021_', m, '.json')
  outfile2 <- paste0(workpath, scen, '/Input_Files/', m, '/reweighting_config_2020baseyear_', m, '.json')
  cfig1 = readLines(infile1)
  cfig1 = gsub('PUMS2021', paste0('PUMS2021_', m), cfig1)
  writeLines(cfig1, outfile1)
  cfig2 = readLines(infile2)
  cfig2 = gsub('PUMS2021', paste0('PUMS2021_', m), cfig2)
  writeLines(cfig2, outfile2)
}

```

# 5 - Configure, set targets and run reweighter for each RPA and year

```{r}

#

source('algo_hh.R')

# Set Targets and run reweighter loop

# Select headship rate scenario

hdshp <- 'acs1721'

# Choose whether to run using the MAPC 101 or the MAPC 97 towns

reb <- 'MAPC101'
#reb <- 'MAPC97'

# Different configuration for 2020 base year

for (yr in c(2020)) {
  #for (mid in c('MAPC')) {
  for (mid in mpos) {
    # Set config files
    inpath <- paste0(workpath, scen, '/Input_Files/', mid, '/')
    
    source(here('scripts/reweighter/read_config_RPA_2020baseyear.R'))
    message(paste0(mid, ' configuration complete'))
    
    outpath <- paste0(workpath, scen, '/Output_Files/', mid, '/')
    age.target <- fread(
      paste0(
        ctrltotal.path,
        'age.targetfile.',
        reb,
        '.',
        scen,
        '.hdshp.',
        hdshp,
        '.y',
        yr,
        '.csv'
      )
    ) %>%
      filter(RPA == mid) %>%
      select(-RPA) %>% setDT()
    setorder(age.target, ageCAT4)
    fwrite(age.target, paste0(inpath, '/age.csv'))
    
    size.target <- fread(
      paste0(
        ctrltotal.path,
        'size.targetfile.',
        reb,
        '.',
        scen,
        '.hdshp.',
        hdshp,
        '.y',
        yr,
        '.csv'
      )
    ) %>%
      filter(RPA == mid) %>%
      select(-RPA) %>% setDT()
    setorder(size.target, size)
    fwrite(size.target, paste0(inpath, '/size.csv'))
    
    type.target <- fread(
      paste0(
        ctrltotal.path,
        'type.targetfile.',
        reb,
        '.',
        scen,
        '.hdshp.',
        hdshp,
        '.y',
        yr,
        '.csv'
      )
    ) %>%
      filter(RPA == mid) %>%
      select(-RPA) %>% setDT()
    setorder(type.target, HHtype)
    fwrite(type.target, paste0(inpath, '/type.csv'))
    
    message(paste0(mid, ' targets set'))
    
    pums <- fread(paste0(inpath, 'PUMS', vintage, '_', mid, '.csv'))
    
    source(here('scripts/reweighter/Manage_Scenario_RPA.R'))
    message(paste0(mid, ' reweighter complete'))
    
    mess <- data.table(txt = paste0(mid, ' reweighter complete'))
    fwrite(mess, paste0(outpath, mid, '_', yr, '_complete.txt'))
  }
}

for (yr in c(2035, 2040, 2045, 2050)) {
#for (yr in c(2030, 2035, 2040, 2045, 2050)) {
  #for (mid in c('MAPC')) {
  for (mid in mpos) {
    # Set config
    inpath <- paste0(workpath, scen, '/Input_Files/', mid, '/')
    source(here('scripts/reweighter/read_config_RPA.R'))
    message(paste0(mid, ' configuration complete'))
    
    # Set targets
    outpath <- paste0(workpath, scen, '/Output_Files/', mid, '/')
    template <- fread(paste0(workpath, 'Templates/AgeHHder_HHtype_template.csv')) %>%
      select(-BASELINE, -TARGET)
    target <- fread(paste0(ctrltotal.path, 'hhtype.targetfile.', reb, '.', scen,'.hdshp.',hdshp,'.y',yr, '.csv')) %>%
      filter(RPA == mid) %>%
      select(-RPA) %>% right_join(template, by = c('AgeCat', 'HHtype')) %>% setDT()
    target[AgeCat %in% c('x == 1', 'x == 2', 'x == 3'), `:=`(BASELINE =
                                                               0,
                                                             INTER = 0,
                                                             TARGET = 0)]
    target[is.na(BASELINE),`:=`(BASELINE =0,INTER = 0,TARGET = 0)]
    setorder(target, AgeCat, HHtype)
    fwrite(target, paste0(inpath, '/AgeHHder_HHtype.csv'))
    message(paste0(mid, ' targets set'))
    
    pums <- fread(paste0(inpath, 'PUMS', vintage, '_', mid, '.csv'))
    
    source(here('scripts/reweighter/Manage_Scenario_RPA.R'))
    message(paste0(mid, ' reweighter complete'))
    
    mess <- data.table(txt = paste0(mid, ' reweighter complete'))
    fwrite(mess, paste0(outpath, mid, '_', yr, '_complete.txt'))
  }
}

```

# 6 - QC reweighter Outputs

```{r}


reb <- 'MAPC101'
#reb <- 'MAPC97'

comp.dt <- data.table()

for (yr in 2020){
  for (mid in mpos) {
    inpath <- paste0(workpath, scen, '/Input_Files/', mid, '/')
    outpath <- paste0(workpath, scen, '/Output_Files/', mid, '/')
    # Summarize total households by mpo from target inputs to reweighter
    target <- fread(paste0(ctrltotal.path, 'type.targetfile.', reb, '.', scen, '.hdshp.', hdshp, '.y', yr, '.csv')) %>%
      filter(RPA == mid) %>% setDT()
    
    tsum <- target[, lapply(.SD, sum), RPA, .SDcols = 'TARGET']
    tsum[, TARGET := round(TARGET)][,year:=yr]
    setnames(tsum, 'RPA', 'mpo')
    setkey(tsum, mpo)
    
    # Calculate total households from the reweighter outputs
    pums <- fread(paste0(inpath, 'PUMS', vintage, '_', mid, '.csv'))
    setkey(pums, SERIALNO, SPORDER)
    
    rw <- data.table()
    
    x <- fread(paste0(outpath, '/weights_final_', scen, '_', mid, '_', yr, '.csv')) %>% select(SERIALNO, SPORDER, new_WGTP) %>% mutate(mpo = mid) %>% setDT()
    setkey(x, SERIALNO, SPORDER)
    xp <- pums[x]
    xsum <- xp[SPORDER == 1, lapply(.SD, sum), .(mpo), .SDcols = c('WGTP', 'new_WGTP')]
    xsum[, rw_HH := round(new_WGTP)][, pums_baseline_hh := round(WGTP)]
    rw <- rbind(rw, xsum)
    setkey(rw, mpo)
    comp <- tsum[rw]
    comp.out <- comp[,.(year,mpo,pums_baseline_hh, TARGET,rw_HH)]
    comp.out[,diff:= TARGET - rw_HH]
    fwrite(comp.out,paste0(outpath,'reweighter_QC_', scen, '_', mid, '_', hdshp, '_', yr,' .csv'))
    comp.dt <- rbind(comp.dt,comp.out)
  }
}
for (yr in c(2030,2035,2040,2045,2050)){
  for (mid in mpos) {
    inpath <- paste0(workpath, scen, '/Input_Files/', mid, '/')
    outpath <- paste0(workpath, scen, '/Output_Files/', mid, '/')
    # Summarize total households by mpo from target inputs to reweighter
    target <- fread(paste0(ctrltotal.path, 'hhtype.targetfile.', reb, '.', scen, '.hdshp.', hdshp, '.y', yr, '.csv')) %>%
      filter(RPA == mid) %>% setDT()
    
    tsum <- target[, lapply(.SD, sum), RPA, .SDcols = 'TARGET']
    tsum[, TARGET := round(TARGET)][,year:=yr]
    setnames(tsum, 'RPA', 'mpo')
    setkey(tsum, mpo)
    
    # Calculate total households from the reweighter outputs
    pums <- fread(paste0(inpath, 'PUMS', vintage, '_', mid, '.csv'))
    setkey(pums, SERIALNO, SPORDER)
    
    rw <- data.table()
    
    x <- fread(paste0(outpath, '/weights_final_', scen, '_', mid, '_', yr, '.csv')) %>% select(SERIALNO, SPORDER, new_WGTP) %>% mutate(mpo = mid) %>% setDT()
    setkey(x, SERIALNO, SPORDER)
    xp <- pums[x]
    xsum <- xp[SPORDER == 1, lapply(.SD, sum), .(mpo), .SDcols = c('WGTP', 'new_WGTP')]
    xsum[, rw_HH := round(new_WGTP)][, pums_baseline_hh := round(WGTP)]
    rw <- rbind(rw, xsum)
    setkey(rw, mpo)
    comp <- tsum[rw]
    comp.out <- comp[,.(year,mpo,pums_baseline_hh, TARGET,rw_HH)]
    comp.out[,diff:= TARGET - rw_HH]
    fwrite(comp.out,paste0(outpath,'reweighter_QC_', scen, '_', mid, '_', hdshp, '_', yr,' .csv'))
    comp.dt <- rbind(comp.dt,comp.out)
  }
}

fwrite(comp.dt,paste0(workpath, scen, '/Output_Files/reweighter_QC_all_RPAs_all_years_', hdshp, '_', hdshp,' .csv'))

comp.dt[abs(diff)>1]

```
