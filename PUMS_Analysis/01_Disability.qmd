---
title: "01_Disability"
format: html
editor: visual
---

# 0.0 Setup - Define helper functions, set knitr path, load necessary packages, set muni data keys

#Set up libraries for the analysis

```{r}
library(tidycensus)
library(tidyverse)
library(survey)
library(srvyr)
library(data.table)
library(janitor) 
library(dplyr)
library(knitr)
library(readxl)
library(writexl)
```

# 0.1 - Set knitr path + root for inputs

```{r}
#copied from MAPC work - not sure if we want to set up this way - 

#Use when Rproject is open
#root <- '../../../../Data/Working/Regional_Control_Totals/'

#General J drive filepath
root <-"J:/EPPR/Active Studies/EOHLC Statewide Hsg Plan_FY24/Data/pums_UMDI"

#PUMS J drive filepath
pums_path <- "J:/EPPR/Active Studies/EOHLC Statewide Hsg Plan_FY24/Data/pums_UMDI"

#Set output filepath
output_path <- ":/EPPR/Active Studies/EOHLC Statewide Hsg Plan_FY24/Data/pums_UMDI/Output"

#Set knitr path
#knitr::opts_knit$set(root.dir = pums_path)
```

# 0.2 - Set package dependencies, set environment, set up data keys

```{r}
#source("J:/EPPR/Active Studies/EOHLC Statewide Hsg Plan_FY24/Data/pums_UMDI")

#Load PUMS variables
pums <- read.csv("J:/EPPR/Active Studies/EOHLC Statewide Hsg Plan_FY24/Data/pums_UMDI/pums_disab_hh_2021_V_2024-10-02.csv")
```

# 0.3 PUMA to RPA Crosswalk

```{r}
#Load in the municipality to PUMA crosswalk.
RPA_crosswalk <- read.csv ("J:/EPPR/Active Studies/EOHLC Statewide Hsg Plan_FY24/Data/pums_UMDI/PUMA10_RPA_crosswalk.csv")
```

# 0.4 PUMS Data Cleaning

```{r}
#Joining the PUMA to RPA crosswalk to the PUMS data. - not working right now, it's a many to many join 
pums <- left_join(
  pums,
  RPA_crosswalk,
  by = c("PUMA"))

pums_duplicates <- pums %>%
    group_by(uniq_obs) %>%
    filter(n() > 1)

print(pums_duplicates)

```

# 1.0 PUMS Analysis

# 1.1 State-level, person level analysis

1)  Number of individuals living with any disability, outside of GQ and those living in GQ

2)  Number of individuals for each detailed disability (6 types) 

3)  Age distribution of people living with disability

4)  Age distribution of people living with each detailed disability type


# 1) Calculate the number of people with a disability statewide, inside and outside of GQ
```{r}
#Create data set with people who have a disability outside of group quarters
people_with_disability <- pums %>%
  group_by(uniq_obs) %>%
  filter(DIS == 1) %>% #filtering for disability flag, will only include person-level data not hhld data
  filter(TYPEHUGQ != 2) #filtering out institutional group quarters

#simple way to calculate weighted number of people with disability 
number_of_people_with_disability <- sum(people_with_disability$PWGTP, na.rm = TRUE)

#Calculate the total number of people in sample, not in GQ 
person_data <- pums %>%
filter(RT == "P") %>% #filtering for only people not hhlds 
filter(TYPEHUGQ != 2) #filtering out institutional group quarters
#add weights and sum total number in sample
total_weighted_sample <- sum(person_data$PWGTP, na.rm = TRUE)

#Calculate percent with a disability
percentage_people_with_disability <- (number_of_people_with_disability / total_weighted_sample) * 100

dis_summary_table_person <- data.frame(
  "People with Disability" = number_of_people_with_disability,
  "Share with Disability" = percentage_people_with_disability,
  "Total" = total_weighted_sample)


###Repeat above steps for people with disability in GQ

#Create data set with people who have a disability IN group quarters
people_with_disability_GQ <- pums %>%
  group_by(uniq_obs) %>%
  filter(DIS == 1) %>% #filtering for disability flag
  filter(TYPEHUGQ == 2) #only institutional group quarters

#simple way to calculate weighted number of people with disability 
number_of_people_with_disability_GQ <- sum(people_with_disability_GQ$PWGTP, na.rm = TRUE)

#Calculate the total number of people in sample in GQ
person_data_GQ <- pums %>%
filter(RT == "P") %>%
filter(TYPEHUGQ == 2)
#add weights and sum
total_weighted_sample_GQ <- sum(person_data_GQ$PWGTP, na.rm = TRUE)

#Calculate percent with a disability
percentage_people_with_disability_GQ <- (number_of_people_with_disability_GQ / total_weighted_sample_GQ) * 100

dis_summary_table_person_GQ <- data.frame(
  "People with Disability" = number_of_people_with_disability_GQ,
  "Share with Disability" = percentage_people_with_disability_GQ,
  "Total" = total_weighted_sample_GQ)

```

```{r}
#Export person-level disability data 
  write.xlsx(list('Percent with disability' = dis_summary_table_person,
                  'Percent of GQ with disability' = dis_summary_table_person_GQ),
           file = "J:/EPPR/Active Studies/EOHLC Statewide Hsg Plan_FY24/Data/pums_UMDI/Output/dis_person.xlsx") 
```

12% of people in the state have some type of disability, which is a little over 800,000 people.

This is for the non-institutionalized population and note that children under 5 are not included in the disability measures for cognitive difficulty, ambulatory difficulty, and self-care difficulty.

In the institutionalized population, 73% have a disability, which is over 45,000 people. 


# 2) Detailed disability data of people statewide, not in GQ
```{r}
# 2.1) Ambulatory disability - DPHY
ambulatory_people <- people_with_disability %>%
  filter(DPHY == 1) 

ambulatory_number_of_people <- sum(ambulatory_people$PWGTP, na.rm = TRUE)

#calculate denominator for population of only 5 and up, not in group quarters
people_5_and_over <- person_data %>%
  filter(AGEP >= 5)

#add weights and sum total number in sample
total_people_5_and_over <- sum(people_5_and_over$PWGTP, na.rm = TRUE)

ambulatory_people_percent <- (ambulatory_number_of_people / total_people_5_and_over) * 100
```

Around 6% of people in the state have an ambulatory disability, meaning they have a condition that substantially limits one or more basic physical activities, such as walking, climbing stairs, reaching, lifting, or carrying. This is around 375,000 people. This data is for the non-institutionalized population that is age 5 and above. 

```{r}
# 2.2) Self-care disability - DDRS
self_care_people <- people_with_disability %>%
  filter(DDRS == 1) 

self_care_number_of_people <- sum(self_care_people$PWGTP, na.rm = TRUE)

self_care_people_percent <- (self_care_number_of_people / total_people_5_and_over) * 100
```

Approximately 155,000 people in the state, or 2% of people, have a self-care disability. This means they have a physical or mental health condition that has lasted at least 6 months and makes it difficult for them to take care of their own personal needs, such as bathing, dressing, or getting around inside the home. This does not include temporary health conditions, such as broken bones or pregnancies. This data is for the non-institutionalized population that is age 5 and above. 

```{r}
# 2.3) Cognitive disability - DREM
cognitive_people <- people_with_disability %>%
  filter(DREM == 1) 

cognitive_number_of_people <- sum(cognitive_people$PWGTP, na.rm = TRUE)

cognitive_people_percent <- (cognitive_number_of_people / total_people_5_and_over) * 100
```

Five percent, or about 330,000, have a cognitive disability in the state. Cognitive disabilities include difficulties learning, remembering, concentrating, or making decisions because of a physical, mental, or emotional condition. This data is for the non-institutionalized population that is age 5 and above. 

```{r}
# 2.4) Independent living disability - DOUT
independent_living_people <- people_with_disability %>%
  filter(DOUT == 1) 

independent_living_number_of_people <- sum(independent_living_people$PWGTP, na.rm = TRUE)

#Create new denominator of people 16+ 
people_16_and_over <- person_data %>%
  filter(AGEP >= 16)

#add weights and sum total number in sample
total_people_16_and_over <- sum(people_16_and_over$PWGTP, na.rm = TRUE)

indpendent_living_people_percent <- (independent_living_number_of_people / total_people_16_and_over) * 100
```

Just over 300,000 people, or 5%, in the state have an independent living disability. This includes physical, mental, or emotional conditions lasting six months or more that makes it difficult or impossible to perform basic activities outside the home alone. This does not include temporary health problems. This data is calculated for the population 16 and older. 

```{r}
# 2.5) Hearing disability - DEAR
hearing_people <- people_with_disability %>%
  filter(DEAR == 1) 

hearing_number_of_people <- sum(hearing_people$PWGTP, na.rm = TRUE)

hearing_people_percent <- (hearing_number_of_people / total_weighted_sample) * 100
```

Three percent, or 215,000, in the state have a hearing disability, meaning they are deaf or have serious difficulty hearing.

```{r}
# 2.6) Vision disability - DEYE
vision_people <- people_with_disability %>%
  filter(DEYE == 1) 

vision_number_of_people <- sum(vision_people$PWGTP, na.rm = TRUE)

vision_people_percent <- (vision_number_of_people / total_weighted_sample) * 100
```

Two percent, or 125,000, in the state have a vision disability, meaning they are blind or have serious difficulty seeing even with corrective lenses. 

```{r}
#Create table with detailed disability data 


#Export person-level detailed disability data 
  write.xlsx(list('Percent with disability' = dis_summary_table_person,
                  'Percent of GQ with disability' = dis_summary_table_person_GQ,
                'Age range' = disability_age_counts),
           file = "J:/EPPR/Active Studies/EOHLC Statewide Hsg Plan_FY24/Data/pums_UMDI/Output/dis_person.xlsx") 

```


# 3) Age distribution of people living with disability statewide
```{r}
#Create age ranges for people with disability data set
age_people_with_disability <- people_with_disability %>% 
select(uniq_obs, PUMA, PWGTP, AGEP, DREM, DPHY, DEYE, DEAR, DOUT, DDRS) %>% 
mutate(age_range = case_when(
    AGEP >= 0 & AGEP < 5 ~ "Under 5",
    AGEP >= 5 & AGEP < 18 ~ "5-17",
    AGEP >= 18 & AGEP < 35 ~ "18-34",
    AGEP >= 35 & AGEP < 65 ~ "35-64",
    AGEP >= 65 & AGEP < 75 ~ "65-74",
    AGEP >= 75 ~ "75 and over"))

#Calculate sum of weights for each age group and percentage
disability_age_counts <- age_people_with_disability %>%
  group_by(age_range) %>%
  summarise(age_weighted_sum = sum(PWGTP)) %>%
  mutate(percentage = (age_weighted_sum / number_of_people_with_disability * 100)) %>%
  mutate(age_range = factor(age_range, levels = c("Under 5", "5-17", "18-34", "35-64", "65-74", "75 and over"))) %>%
  arrange(age_range)
```

The majority of people with disabilities are adults, especially older adults. One in four of people with a disability in the state are age 75 and older. A total of 43% of people with a disability are age 65 and older (17% is 64-74 and 26% is age 75+).

A little over a third of people with a disability are in the age range of 35 to 64. Only 14% are in the 18-34 age range and only 8% in the 5-17 category.

Note that children under 5 are excluded in the disability measures for cognitive difficulty, ambulatory difficulty, and self-care difficulty. The independent living variable is only for people 16 and older. 

# 4)  Age distribution of people living with each detailed disability type, not in GQ
```{r}
# 4.1) Ambulatory disability by age - DPHY
ambulatory_people_age <- age_people_with_disability %>%
  filter(DPHY == 1) %>%
  group_by(age_range) %>%
  summarise(age_weighted_sum = sum(PWGTP)) %>%
  mutate(percentage = (age_weighted_sum / ambulatory_number_of_people * 100)) %>%
  mutate(age_range = factor(age_range, levels = c("Under 5", "5-17", "18-34", "35-64", "65-74", "75 and over"))) %>%
  arrange(age_range)
```

```{r}
# 4.2) Self care disability by age - DDRS
self_care_people_age <- age_people_with_disability %>%
  filter(DDRS == 1) %>%
  group_by(age_range) %>%
  summarise(age_weighted_sum = sum(PWGTP)) %>%
  mutate(percentage = (age_weighted_sum / self_care_number_of_people * 100)) %>%
  mutate(age_range = factor(age_range, levels = c("Under 5", "5-17", "18-34", "35-64", "65-74", "75 and over"))) %>%
  arrange(age_range)
```

```{r}
# 4.3) Cognitive disability by age - DREM 
cognitive_people_age <- age_people_with_disability %>%
  filter(DREM == 1) %>%
  group_by(age_range) %>%
  summarise(age_weighted_sum = sum(PWGTP)) %>%
  mutate(percentage = (age_weighted_sum / cognitive_number_of_people * 100)) %>%
  mutate(age_range = factor(age_range, levels = c("Under 5", "5-17", "18-34", "35-64", "65-74", "75 and over"))) %>%
  arrange(age_range)
```

```{r}
# 4.4) Independent living disability by age - DOUT
independent_living_people_age <- age_people_with_disability %>%
  filter(DOUT == 1) %>%
  group_by(age_range) %>%
  summarise(age_weighted_sum = sum(PWGTP)) %>%
  mutate(percentage = (age_weighted_sum / independent_living_number_of_people * 100)) %>%
  mutate(age_range = factor(age_range, levels = c("Under 5", "5-17", "18-34", "35-64", "65-74", "75 and over"))) %>%
  arrange(age_range)
```

```{r}
# 4.5) Hearing disability by age - DEAR
hearing_people_age <- age_people_with_disability %>%
  filter(DEAR == 1) %>%
  group_by(age_range) %>%
  summarise(age_weighted_sum = sum(PWGTP)) %>%
  mutate(percentage = (age_weighted_sum / hearing_number_of_people * 100)) %>%
  mutate(age_range = factor(age_range, levels = c("Under 5", "5-17", "18-34", "35-64", "65-74", "75 and over"))) %>%
  arrange(age_range)
```

```{r}
# 4.6) Vision disability by age - DEYE 
vision_people_age <- age_people_with_disability %>%
  filter(DEYE == 1) %>%
  group_by(age_range) %>%
  summarise(age_weighted_sum = sum(PWGTP)) %>%
  mutate(percentage = (age_weighted_sum / vision_number_of_people * 100)) %>%
  mutate(age_range = factor(age_range, levels = c("Under 5", "5-17", "18-34", "35-64", "65-74", "75 and over"))) %>%
  arrange(age_range)
```


```{r}
#export person-level detailed disability data by age
  write.xlsx(list('Ambulatory' = ambulatory_people_age,
                  'Self care' = self_care_people_age,
                'Cognitive' = cognitive_people_age,
                'Independent living' = independent_living_people_age,
                'Hearing' = hearing_people_age, 
                'Vision' = vision_people_age), 
           file = "J:/EPPR/Active Studies/EOHLC Statewide Hsg Plan_FY24/Data/pums_UMDI/Output/detailed_dis_person_age.xlsx") 
```


# 1.2 State-level, household level analysis

Number of hhlds with a member who has a disability statewide and by RPA

Share of hhlds with a member who has a disability statewide and by RPA

Number of hhlds with a member who has a disability by type of disability e.g. With an ambulatory disability, etc.

Share of hhlds with a member who has a disability by type of disability e.g. With an ambulatory disability, etc.

Hhld Income

Housing tenure

Age of housing stock

Over-crowding

Cost-burden

```{r}
#Number of households with a member who has a disability 
#Statewide
#Aggregate person-level data to household level
households_with_disability <- people_with_disability %>% #GQ is already filtered out in person-level data
  group_by(SERIALNO) %>%
  summarize(WGTP = first(WGTP), count_disabled = sum(DIS == 1)) %>%  #Retain household weights (same for all persons in the household)
  ungroup()

total_households_with_disability <- sum(households_with_disability$WGTP, na.rm = TRUE)

#Calculate the total number of households in sample 
household_data <- pums %>%
filter(RT == "H") %>%
filter(TYPEHUGQ != 2)
#add weights
total_weighted_households <- sum(household_data$WGTP, na.rm = TRUE)

#Calculate percent of households who have some one with a disability
percentage_with_disability <- (total_households_with_disability / total_weighted_households) * 100

#Create summary table
dis_summary_table_hhld <- data.frame(
  "Households with Disability" = total_households_with_disability,
  "Share of Households with Disability" = percentage_with_disability,
  "Total Households" = total_weighted_households)

```

22% of households in the state have someone with a disability. This is around 650,000 households.

```{r}
#Export disability data 
  write.xlsx(list('Percent with disability' = dis_summary_table_hhld),
           file = "J:/EPPR/Active Studies/EOHLC Statewide Hsg Plan_FY24/Data/pums_UMDI/Output/dis_hhld.xlsx") 
```

```{r}
#Detailed disability type for hhlds statewide

## Ambulatory disabilities - DPHY
ambulatory_households <- people_with_disability %>% #GQ is already filtered out in person-level data
  group_by(SERIALNO) %>%
  filter(DPHY == 1) %>%
  summarize(WGTP = first(WGTP), count_ambulatory = sum(DPHY == 1)) %>%  #Retain household weights (same for all persons in the household)
  ungroup()

#Calculate weighted total of ambulatory hhlds 
ambulatory_total_households <- sum(ambulatory_households$WGTP, na.rm = TRUE)

#Calculate percentage out of all households
ambulatory_percentage <- (ambulatory_total_households / total_weighted_households) * 100 #need a different denominator, 5 and up

#Create summary table
ambulatory_summary_table_hhld <- data.frame(
  Description = "Ambulatory Households",   
  Count = ambulatory_total_households,     
  Percent = ambulatory_percentage,         
  Total_Households = total_weighted_households) #need a different denominator, 5 and up 

#Repeating above steps for all detailed disabilities 


## Self-care difficulty - DDRS 
self_care_households <- people_with_disability %>% 
  group_by(SERIALNO) %>%
  filter(DDRS == 1) %>%
  summarize(WGTP = first(WGTP), count_self_care = sum(DDRS == 1)) %>%  
  ungroup()

self_care_total_households <- sum(self_care_households$WGTP, na.rm = TRUE)
self_care_percentage <- (self_care_total_households / total_weighted_households) * 100  #need a different denominator 

self_care_summary_table_hhld <- data.frame(
  Description = "Self-Care Disability Households",   
  Count = self_care_total_households,     
  Percent = self_care_percentage,         
  Total_Households = total_weighted_households) #need a different denominator 


## Hearing difficulty - DEAR
hearing_households <- people_with_disability %>% 
  group_by(SERIALNO) %>%
  filter(DEAR == 1) %>%
  summarize(WGTP = first(WGTP), count_hearing = sum(DEAR == 1)) %>%  
  ungroup()

hearing_total_households <- sum(hearing_households$WGTP, na.rm = TRUE)
hearing_percentage <- (hearing_total_households / total_weighted_households) * 100

hearing_summary_table_hhld <- data.frame(
  Description = "Hearing Disability Households",   
  Count = hearing_total_households,     
  Percent = hearing_percentage,         
  Total_Households = total_weighted_households)


## Vision difficulty - DEYE 
vision_households <- people_with_disability %>% 
  group_by(SERIALNO) %>%
  filter(DEYE == 1) %>%
  summarize(WGTP = first(WGTP), count_vision = sum(DEYE == 1)) %>%  
  ungroup()

vision_total_households <- sum(vision_households$WGTP, na.rm = TRUE)
vision_percentage <- (vision_total_households / total_weighted_households) * 100

vision_summary_table_hhld <- data.frame(
  Description = "Vision Disability Households",   
  Count = vision_total_households,     
  Percent = vision_percentage,         
  Total_Households = total_weighted_households)


## Independent living difficulty - DOUT
independent_living_households <- people_with_disability %>% 
  group_by(SERIALNO) %>%
  filter(DOUT == 1) %>%
  summarize(WGTP = first(WGTP), count_independent_living = sum(DOUT == 1)) %>%   
  ungroup()

independent_living_total_households <- sum(independent_living_households$WGTP, na.rm = TRUE)
independent_living_percentage <- (independent_living_total_households / total_weighted_households) * 100 #need a different denominator 

independent_living_summary_table_hhld <- data.frame(
  Description = "Independent Living Disability Households",   
  Count = independent_living_total_households,     
  Percent = independent_living_percentage,         
  Total_Households = total_weighted_households) #need a different denominator 


## Cognitive difficulty - DREM 
cognitive_households <- people_with_disability %>% 
  group_by(SERIALNO) %>%
  filter(DREM == 1) %>%
  summarize(WGTP = first(WGTP), count_cognitive = sum(DREM == 1)) %>%  
  ungroup()

cognitive_total_households <- sum(cognitive_households$WGTP, na.rm = TRUE)
cognitive_percentage <- (cognitive_total_households / total_weighted_households) * 100 #need a different denominator 

cognitive_summary_table_hhld <- data.frame(
  Description = "Cognitive Disability Households",   
  Count = cognitive_total_households,     
  Percent = cognitive_percentage,         
  Total_Households = total_weighted_households) #need a different denominator 


## Combine tables with counts and percents for detailed disabilities 
detailed_disability_table <- rbind(ambulatory_summary_table_hhld, self_care_summary_table_hhld, hearing_summary_table_hhld, vision_summary_table_hhld, independent_living_summary_table_hhld, cognitive_summary_table_hhld)


```

```{r}
#Export detailed disability household data 
  write.xlsx(list('Detailed Disability Households' = detailed_disability_table),
           file = "J:/EPPR/Active Studies/EOHLC Statewide Hsg Plan_FY24/Data/pums_UMDI/Output/dis_hhld_detail.xlsx") 

```

```{r}
#Analysis by RPA 



```

